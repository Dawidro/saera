#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

configure: configure-stamp

configure-stamp:
	dh_testdir
	touch configure-stamp

build: build-stamp

build-stamp: configure-stamp
	dh_testdir
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	# ======================================================
	mkdir -p "$(CURDIR)/debian/saera"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera"
	cp -a "saera/opt/saera/portrait.py" "$(CURDIR)/debian/saera/opt/saera/portrait.py"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera"
	cp -a "saera/opt/saera/saera_mic.png" "$(CURDIR)/debian/saera/opt/saera/saera_mic.png"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera"
	cp -a "saera/opt/saera/saera_chat_bg.png" "$(CURDIR)/debian/saera/opt/saera/saera_chat_bg.png"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera"
	cp -a "saera/opt/saera/saera_processing.py" "$(CURDIR)/debian/saera/opt/saera/saera_processing.py"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera"
	cp -a "saera/opt/saera/siri_mic.png" "$(CURDIR)/debian/saera/opt/saera/siri_mic.png"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera"
	cp -a "saera/opt/saera/siri_mic_spinner.png" "$(CURDIR)/debian/saera/opt/saera/siri_mic_spinner.png"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera"
	cp -a "saera/opt/saera/dingding.wav" "$(CURDIR)/debian/saera/opt/saera/dingding.wav"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera"
	cp -a "saera/opt/saera/saera_bg.png" "$(CURDIR)/debian/saera/opt/saera/saera_bg.png"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera"
	cp -a "saera/opt/saera/saera.py" "$(CURDIR)/debian/saera/opt/saera/saera.py"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera/model"
	cp -a "saera/opt/saera/model/0893.token" "$(CURDIR)/debian/saera/opt/saera/model/0893.token"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera/model"
	cp -a "saera/opt/saera/model/0893.lm" "$(CURDIR)/debian/saera/opt/saera/model/0893.lm"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera/model"
	cp -a "saera/opt/saera/model/0893.dic" "$(CURDIR)/debian/saera/opt/saera/model/0893.dic"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera/model"
	cp -a "saera/opt/saera/model/0893.vocab" "$(CURDIR)/debian/saera/opt/saera/model/0893.vocab"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera/model"
	cp -a "saera/opt/saera/model/0893.corpus" "$(CURDIR)/debian/saera/opt/saera/model/0893.corpus"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera/model"
	cp -a "saera/opt/saera/model/0893.sent.arpabo" "$(CURDIR)/debian/saera/opt/saera/model/0893.sent.arpabo"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera/model"
	cp -a "saera/opt/saera/model/0893.sent" "$(CURDIR)/debian/saera/opt/saera/model/0893.sent"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera/sentences"
	cp -a "saera/opt/saera/sentences/__init__.py" "$(CURDIR)/debian/saera/opt/saera/sentences/__init__.py"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera/sentences"
	cp -a "saera/opt/saera/sentences/sentences_english.py" "$(CURDIR)/debian/saera/opt/saera/sentences/sentences_english.py"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera/sentences"
	cp -a "saera/opt/saera/sentences/sentences_german.py" "$(CURDIR)/debian/saera/opt/saera/sentences/sentences_german.py"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera/sentences"
	cp -a "saera/opt/saera/sentences/sentences_portuguese.py" "$(CURDIR)/debian/saera/opt/saera/sentences/sentences_portuguese.py"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera/sentences"
	cp -a "saera/opt/saera/sentences/sentences_english.pyc" "$(CURDIR)/debian/saera/opt/saera/sentences/sentences_english.pyc"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera/sentences"
	cp -a "saera/opt/saera/sentences/sentences_german.pyc" "$(CURDIR)/debian/saera/opt/saera/sentences/sentences_german.pyc"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera/sentences"
	cp -a "saera/opt/saera/sentences/__init__.pyc" "$(CURDIR)/debian/saera/opt/saera/sentences/__init__.pyc"
	mkdir -p "$(CURDIR)/debian/saera/opt/saera/sentences"
	cp -a "saera/opt/saera/sentences/sentences_spanish.py" "$(CURDIR)/debian/saera/opt/saera/sentences/sentences_spanish.py"
	mkdir -p "$(CURDIR)/debian/saera/usr/local/lib/python2.7/dist-packages"
	cp -a "saera/usr/local/lib/python2.7/dist-packages/saera-0.1.egg-info" "$(CURDIR)/debian/saera/usr/local/lib/python2.7/dist-packages/saera-0.1.egg-info"
	mkdir -p "$(CURDIR)/debian/saera/usr/share/applications/hildon"
	cp -a "saera/usr/share/applications/hildon/saera.desktop" "$(CURDIR)/debian/saera/usr/share/applications/hildon/saera.desktop"
	mkdir -p "$(CURDIR)/debian/saera/usr/share/icons/hicolor/80x80/apps"
	cp -a "saera/usr/share/icons/hicolor/80x80/apps/saera.png" "$(CURDIR)/debian/saera/usr/share/icons/hicolor/80x80/apps/saera.png"
	# ======================================================

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs debian/changelog
	dh_installdocs
	dh_installexamples
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure